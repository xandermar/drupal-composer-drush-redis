<?php

use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 */
function taxonomy_machine_name_install() {
  batch_set(
    [
      'file' => drupal_get_path('module', 'taxonomy_machine_name') . '/taxonomy_machine_name.install',
      'title' => t('Generating missing taxonomy term machine names'),
      'init_message' => t('Starting taxonomy term machine names update'),
      'error_message' => t('Error updating taxonomy term machine names'),
      'operations' => [
        ['taxonomy_machine_name_update_all_terms', []],
      ],
    ]
  );
}

/**
 * Update machine names for existing terms.
 */
function taxonomy_machine_name_update_8001(&$sandbox = NULL) {
  taxonomy_machine_name_update_all_terms($sandbox);
  // Update engine names it different, sigh...
  $sandbox['#finished'] = $sandbox['finished'];

  // Update engine does this different, too.
  return $sandbox['message'];
}

/**
 * Update machine names for existing terms, usable both in batch and update.
 *
 * @param $context
 *   The $context parameter in updates, callen $context in batch api.
 */
function taxonomy_machine_name_update_all_terms(&$context) {
  if (empty($context['tids'])) {
    // Size of the batch to process.
    $batch_size = 10;

    $tids = \Drupal::entityQuery('taxonomy_term')->execute();

    $context['total'] = count($tids);
    $context['tids'] = array_chunk($tids, $batch_size);
    $context['succeeded'] = $context['errored'] = $context['processed_chunks'] = 0;
  }

  // Nothing to do.
  if (!$context['total']) {
    $context['message'] = t('No terms updated');
    return;
  }

  // Process all terms in this chunk.
  $current_chunk = $context['tids'][$context['processed_chunks']];
  $terms = Term::loadMultiple($current_chunk);

  foreach ($terms as $term) {
    $success = taxonomy_machine_name_update_term($term);
    $success ? $context['succeeded']++ : $context['errored']++;
  }

  // Increment the number of processed chunks to determine when we've finished.
  $context['processed_chunks']++;

  // When we have processed all of the chunks $context['finished'] will be 1.
  // Then the batch / update runner will consider the job finished.
  $context['finished'] = $context['processed_chunks'] / count($context['tids']);

  $context['message'] = t(
    '@succeeded terms were updated correctly. @errored terms failed.',
    [
      '@succeeded' => $context['succeeded'],
      '@errored' => $context['errored'],
    ]
  );
}
